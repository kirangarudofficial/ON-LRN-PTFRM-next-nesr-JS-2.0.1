version: '3.8'

services:
  # ==============================================
  # DATABASES
  # ==============================================
  postgres:
    image: postgres:15-alpine
    container_name: edu-postgres
    environment:
      POSTGRES_DB: eduplatform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: users,courses,progress,ecommerce,payments,recommendations,analytics,admin,cms,marketing,compliance,assessments,ai_tutor
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  mongodb:
    image: mongo:7-jammy
    container_name: edu-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  redis:
    image: redis:7-alpine
    container_name: edu-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  # ==============================================
  # MESSAGE QUEUE
  # ==============================================
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: edu-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  # ==============================================
  # SEARCH ENGINE
  # ==============================================
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: edu-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"\\(green\\|yellow\\)\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  kibana:
    image: kibana:8.11.0
    container_name: edu-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - edu-network

  # ==============================================
  # OBJECT STORAGE
  # ==============================================
  minio:
    image: minio/minio:latest
    container_name: edu-minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  # ==============================================
  # SERVICE DISCOVERY
  # ==============================================
  consul:
    image: consul:1.16-alpine
    container_name: edu-consul
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    volumes:
      - consul_data:/consul/data
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edu-network

  # ==============================================
  # MONITORING & OBSERVABILITY
  # ==============================================
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: edu-prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - edu-network

  grafana:
    image: grafana/grafana:10.1.0
    container_name: edu-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - edu-network

  loki:
    image: grafana/loki:2.9.0
    container_name: edu-loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - edu-network

  promtail:
    image: grafana/promtail:2.9.0
    container_name: edu-promtail
    volumes:
      - ./monitoring/promtail/promtail.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - edu-network

  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: edu-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "6831:6831/udp"
      - "6832:6832/udp"
    networks:
      - edu-network

  # ==============================================
  # MEDIA STREAMING
  # ==============================================
  nginx-hls:
    image: nginx:alpine
    container_name: edu-nginx-hls
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - media_storage:/var/www/media
    ports:
      - "8080:80"
    networks:
      - edu-network

  # ==============================================
  # MICROSERVICES
  # ==============================================
  api-gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile
    container_name: edu-api-gateway
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PORT: 4000
      REDIS_URL: redis://redis:6379
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - redis
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: edu-user-service
    ports:
      - "4001:4001"
    environment:
      NODE_ENV: development
      PORT: 4001
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/users
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/api/users/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  course-service:
    build:
      context: ./services/course-service
      dockerfile: Dockerfile
    container_name: edu-course-service
    ports:
      - "4002:4002"
    environment:
      NODE_ENV: development
      PORT: 4002
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/courses
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/api/courses/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  content-service:
    build:
      context: ./services/content-service
      dockerfile: Dockerfile
    container_name: edu-content-service
    ports:
      - "4003:4003"
    environment:
      NODE_ENV: development
      PORT: 4003
      MONGO_URL: mongodb://admin:password@mongodb:27017/content?authSource=admin
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - mongodb
      - minio
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/api/content/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  progress-service:
    build:
      context: ./services/progress-service
      dockerfile: Dockerfile
    container_name: edu-progress-service
    ports:
      - "4004:4004"
    environment:
      NODE_ENV: development
      PORT: 4004
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/progress
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/api/progress/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ecommerce-service:
    build:
      context: ./services/ecommerce-service
      dockerfile: Dockerfile
    container_name: edu-ecommerce-service
    ports:
      - "4005:4005"
    environment:
      NODE_ENV: development
      PORT: 4005
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/ecommerce
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4005/api/ecommerce/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: edu-payment-service
    ports:
      - "4006:4006"
    environment:
      NODE_ENV: development
      PORT: 4006
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/payments
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4006/api/payments/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  review-service:
    build:
      context: ./services/review-service
      dockerfile: Dockerfile
    container_name: edu-review-service
    ports:
      - "4007:4007"
    environment:
      NODE_ENV: development
      PORT: 4007
      MONGO_URL: mongodb://admin:password@mongodb:27017/reviews?authSource=admin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - mongodb
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4007/api/reviews/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  discussion-service:
    build:
      context: ./services/discussion-service
      dockerfile: Dockerfile
    container_name: edu-discussion-service
    ports:
      - "4008:4008"
    environment:
      NODE_ENV: development
      PORT: 4008
      MONGO_URL: mongodb://admin:password@mongodb:27017/discussions?authSource=admin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - mongodb
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4008/api/discussions/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: edu-notification-service
    ports:
      - "4009:4009"
    environment:
      NODE_ENV: development
      PORT: 4009
      MONGO_URL: mongodb://admin:password@mongodb:27017/notifications?authSource=admin
      REDIS_URL: redis://redis:6379
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4009/api/notifications/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  search-service:
    build:
      context: ./services/search-service
      dockerfile: Dockerfile
    container_name: edu-search-service
    ports:
      - "4010:4010"
    environment:
      NODE_ENV: development
      PORT: 4010
      ELASTICSEARCH_URL: http://elasticsearch:9200
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - elasticsearch
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4010/api/search/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  recommendation-service:
    build:
      context: ./services/recommendation-service
      dockerfile: Dockerfile
    container_name: edu-recommendation-service
    ports:
      - "4011:4011"
    environment:
      NODE_ENV: development
      PORT: 4011
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/recommendations
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4011/api/recommendations/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    container_name: edu-analytics-service
    ports:
      - "4012:4012"
    environment:
      NODE_ENV: development
      PORT: 4012
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/analytics
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4012/api/analytics/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  session-tracking-service:
    build:
      context: ./services/session-tracking-service
      dockerfile: Dockerfile
    container_name: edu-session-tracking-service
    ports:
      - "4013:4013"
    environment:
      NODE_ENV: development
      PORT: 4013
      MONGO_URL: mongodb://admin:password@mongodb:27017/sessions?authSource=admin
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4013/api/sessions/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-service:
    build:
      context: ./services/admin-service
      dockerfile: Dockerfile
    container_name: edu-admin-service
    ports:
      - "4014:4014"
    environment:
      NODE_ENV: development
      PORT: 4014
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/admin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4014/api/admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cms-service:
    build:
      context: ./services/cms-service
      dockerfile: Dockerfile
    container_name: edu-cms-service
    ports:
      - "4015:4015"
    environment:
      NODE_ENV: development
      PORT: 4015
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/cms
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4015/api/cms/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  marketing-service:
    build:
      context: ./services/marketing-service
      dockerfile: Dockerfile
    container_name: edu-marketing-service
    ports:
      - "4016:4016"
    environment:
      NODE_ENV: development
      PORT: 4016
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/marketing
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4016/api/marketing/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-tutor-service:
    build:
      context: ./services/ai-tutor-service
      dockerfile: Dockerfile
    container_name: edu-ai-tutor-service
    ports:
      - "4018:4018"
    environment:
      NODE_ENV: development
      PORT: 4018
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/ai_tutor
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4018/api/ai/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  assessment-service:
    build:
      context: ./services/assessment-service
      dockerfile: Dockerfile
    container_name: edu-assessment-service
    ports:
      - "4021:4021"
    environment:
      NODE_ENV: development
      PORT: 4021
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/assessments
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - postgres
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4021/api/assessments/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  media-processing-service:
    build:
      context: ./services/media-processing-service
      dockerfile: Dockerfile
    container_name: edu-media-processing-service
    ports:
      - "4024:4024"
    environment:
      NODE_ENV: development
      PORT: 4024
      MONGO_URL: mongodb://admin:password@mongodb:27017/media?authSource=admin
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      - mongodb
      - minio
      - rabbitmq
      - consul
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4024/api/media/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  # ==============================================
  # FRONTEND APPLICATION
  # ==============================================
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: edu-web
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_HLS_URL: http://localhost:8080
    depends_on:
      - api-gateway
    networks:
      - edu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  edu-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  rabbitmq_data:
  elasticsearch_data:
  minio_data:
  consul_data:
  prometheus_data:
  grafana_data:
  loki_data:
  media_storage: