// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserPreference {
  id           String   @id @default(cuid())
  userId       String   @unique
  categories   String[] // Preferred categories
  levels       String[] // Preferred difficulty levels
  languages    String[] // Preferred languages
  priceRange   Json?    // {min: number, max: number}
  duration     Json?    // {min: number, max: number} in minutes
  
  // Learning style preferences
  videoContent    Boolean @default(true)
  articleContent  Boolean @default(true)
  quizzes         Boolean @default(true)
  assignments     Boolean @default(true)
  certificates    Boolean @default(true)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("user_preferences")
}

model UserInteraction {
  id           String          @id @default(cuid())
  userId       String
  courseId     String
  interactionType InteractionType
  value        Float?          // rating, time spent, etc.
  timestamp    DateTime        @default(now())
  
  @@index([userId, courseId])
  @@index([courseId, interactionType])
  @@map("user_interactions")
}

model CourseRecommendation {
  id           String   @id @default(cuid())
  userId       String
  courseId     String
  score        Float    // recommendation confidence score
  reason       String   // why this course was recommended
  algorithm    String   // which algorithm generated this
  isClicked    Boolean  @default(false)
  isEnrolled   Boolean  @default(false)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, courseId])
  @@index([userId, score])
  @@map("course_recommendations")
}

model SimilarCourse {
  id           String @id @default(cuid())
  courseId     String
  similarCourseId String
  similarity   Float  // similarity score 0-1
  algorithm    String // collaborative, content-based, etc.
  
  @@unique([courseId, similarCourseId])
  @@index([courseId, similarity])
  @@map("similar_courses")
}

model TrendingCourse {
  id           String   @id @default(cuid())
  courseId     String
  period       String   // daily, weekly, monthly
  score        Float    // trending score
  enrollments  Int      @default(0)
  views        Int      @default(0)
  completions  Int      @default(0)
  date         DateTime
  
  @@unique([courseId, period, date])
  @@index([period, date, score])
  @@map("trending_courses")
}

enum InteractionType {
  VIEW
  ENROLL
  COMPLETE
  RATE
  REVIEW
  SHARE
  BOOKMARK
  SEARCH
}