// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

model ChatSession {
  id       String @id @default(cuid())
  userId   String
  courseId String?
  title    String?
  
  // Relations
  messages ChatMessage[]
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("chat_sessions")
}

model ChatMessage {
  id        String      @id @default(cuid())
  sessionId String
  role      MessageRole
  content   String
  metadata  Json?
  
  // Relations
  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  // Metadata
  createdAt DateTime @default(now())
  
  @@map("chat_messages")
}

model KnowledgeBase {
  id          String                 @id @default(cuid())
  courseId    String
  lectureId   String?
  title       String
  content     String
  embedding   Unsupported("vector")?
  type        ContentType
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("knowledge_base")
}

model LearningPath {
  id          String @id @default(cuid())
  userId      String
  title       String
  description String?
  courseIds   String[]
  progress    Float    @default(0)
  isActive    Boolean  @default(true)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("learning_paths")
}

model StudyPlan {
  id           String @id @default(cuid())
  userId       String
  courseId     String
  targetDate   DateTime?
  dailyGoal    Int      @default(30) // minutes per day
  weeklyGoal   Int      @default(210) // minutes per week
  currentStreak Int     @default(0)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, courseId])
  @@map("study_plans")
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
}

enum ContentType {
  LECTURE
  ARTICLE
  QUIZ
  ASSIGNMENT
  RESOURCE
}